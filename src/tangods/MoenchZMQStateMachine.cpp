/*----- PROTECTED REGION ID(MoenchZMQStateMachine.cpp) ENABLED START -----*/
/* clang-format on */
//=============================================================================
//
// file :        MoenchZMQStateMachine.cpp
//
// description : State machine file for the MoenchZMQ class
//
// project :     MoenchZMQ processor
//
// This file is part of Tango device class.
//
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the MIT licence.
//
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include "MoenchZMQ.h"

/* clang-format off */
/*----- PROTECTED REGION END -----*/	//	MoenchZMQ::MoenchZMQStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================


namespace MoenchZMQ_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : MoenchZMQ::is_file_index_allowed()
 * Description:  Execution allowed for file_index attribute
 */
//--------------------------------------------------------
bool MoenchZMQ::is_file_index_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for file_index attribute in Write access.
	/*----- PROTECTED REGION ID(MoenchZMQ::file_indexStateAllowed_WRITE) ENABLED START -----*/
	/* clang-format on */
	/* clang-format off */
	/*----- PROTECTED REGION END -----*/	//	MoenchZMQ::file_indexStateAllowed_WRITE

	//	Not any excluded states for file_index attribute in read access.
	/*----- PROTECTED REGION ID(MoenchZMQ::file_indexStateAllowed_READ) ENABLED START -----*/
	/* clang-format on */
	/* clang-format off */
	/*----- PROTECTED REGION END -----*/	//	MoenchZMQ::file_indexStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MoenchZMQ::is_filename_allowed()
 * Description:  Execution allowed for filename attribute
 */
//--------------------------------------------------------
bool MoenchZMQ::is_filename_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for filename attribute in Write access.
	/*----- PROTECTED REGION ID(MoenchZMQ::filenameStateAllowed_WRITE) ENABLED START -----*/
	/* clang-format on */
	/* clang-format off */
	/*----- PROTECTED REGION END -----*/	//	MoenchZMQ::filenameStateAllowed_WRITE

	//	Not any excluded states for filename attribute in read access.
	/*----- PROTECTED REGION ID(MoenchZMQ::filenameStateAllowed_READ) ENABLED START -----*/
	/* clang-format on */
	/* clang-format off */
	/*----- PROTECTED REGION END -----*/	//	MoenchZMQ::filenameStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MoenchZMQ::is_file_root_path_allowed()
 * Description:  Execution allowed for file_root_path attribute
 */
//--------------------------------------------------------
bool MoenchZMQ::is_file_root_path_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for file_root_path attribute in Write access.
	/*----- PROTECTED REGION ID(MoenchZMQ::file_root_pathStateAllowed_WRITE) ENABLED START -----*/
	/* clang-format on */
	/* clang-format off */
	/*----- PROTECTED REGION END -----*/	//	MoenchZMQ::file_root_pathStateAllowed_WRITE

	//	Not any excluded states for file_root_path attribute in read access.
	/*----- PROTECTED REGION ID(MoenchZMQ::file_root_pathStateAllowed_READ) ENABLED START -----*/
	/* clang-format on */
	/* clang-format off */
	/*----- PROTECTED REGION END -----*/	//	MoenchZMQ::file_root_pathStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MoenchZMQ::is_analog_img_allowed()
 * Description:  Execution allowed for analog_img attribute
 */
//--------------------------------------------------------
bool MoenchZMQ::is_analog_img_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for analog_img attribute in read access.
	/*----- PROTECTED REGION ID(MoenchZMQ::analog_imgStateAllowed_READ) ENABLED START -----*/
	/* clang-format on */
	/* clang-format off */
	/*----- PROTECTED REGION END -----*/	//	MoenchZMQ::analog_imgStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : MoenchZMQ::is_counting_img_allowed()
 * Description:  Execution allowed for counting_img attribute
 */
//--------------------------------------------------------
bool MoenchZMQ::is_counting_img_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for counting_img attribute in read access.
	/*----- PROTECTED REGION ID(MoenchZMQ::counting_imgStateAllowed_READ) ENABLED START -----*/
	/* clang-format on */
	/* clang-format off */
	/*----- PROTECTED REGION END -----*/	//	MoenchZMQ::counting_imgStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================


/*----- PROTECTED REGION ID(MoenchZMQ::MoenchZMQStateAllowed.AdditionalMethods) ENABLED START -----*/
/* clang-format on */
//	Additional Methods
/* clang-format off */
/*----- PROTECTED REGION END -----*/	//	MoenchZMQ::MoenchZMQStateAllowed.AdditionalMethods

}	//	End of namespace
